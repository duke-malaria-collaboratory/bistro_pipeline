tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE)
bord5_ed_i <- glm(death ~ bord5 + education + bord5*education, family = binomial(link = "log"), data = kenya_f)
summary(bord5_ed_i)
lincom(bord5_ed_i, specification = c("(Intercept)",
"(Intercept) + bord5",
"(Intercept) + education1",
"(Intercept)+ bord5 + education1 + bord5:education1",
"(Intercept) + education2",
"(Intercept) + bord5 + education2 + bord5:education2"), level = 0.95, eform = TRUE)
lincom(bord5_ed_i, specification = c("bord5",
"bord5 + bord5:education1",
"bord5 + bord5:education2"), level = 0.95, eform = TRUE)
glm(death ~ bord5, family = binomial(link = "log"), data = kenya_f %>% filter(education == 0)) %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE)
glm(death ~ bord5, family = binomial(link = "log"), data = kenya_f %>% filter(education == 1)) %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE)
glm(death ~ bord5, family = binomial(link = "log"), data = kenya_f %>% filter(education == 2)) %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE)
# get the data into shape
rr_df <- lincom(bord5_ed_i, specification = c("bord5",
"bord5 + bord5:education1",
"bord5 + bord5:education2"), level = 0.95, eform = TRUE) %>%
as.data.frame() %>%
rownames_to_column(var = "specification") %>%
unnest(cols = c(Estimate, `2.5 %`, `97.5 %`, Chisq, `Pr(>Chisq)`)) %>%
mutate(education_stratum = factor(case_when(specification == "bord5" ~ "No school",
specification == "bord5 + bord5:education1" ~ "Primary only",
specification == "bord5 + bord5:education2" ~ "Post-primary"), levels = c("No school", "Primary only", "Post-primary")))
# make a ggplot
ggplot(rr_df) +
geom_pointrange(aes(x = Estimate, xmin = `2.5 %`, xmax = `97.5 %`, y = fct_rev(education_stratum))) +
labs(y = "Mother's education level", x = "Effect of high (5+) vs low birth order on risk of childhood death (Risk ratio, 95% CI)") +
scale_x_continuous(trans = "log", limits = c(0.5,2.5), breaks = c(0.5, 0.75, 1, 1.5, 2, 2.5)) +
geom_vline(xintercept = 1, linetype = "dotted")
bord5_ed <- glm(death ~ bord5 + education, family = binomial(link = "log"), data = kenya_f)
summary(bord5_ed)
anova(bord5_ed_i, bord5_ed, test = "LRT")
knitr::opts_chunk$set(echo = TRUE)
getwd()
library(biostat3)
library(tidyverse)
library(broom)
kenya <- read_csv("../data/Kenya_lab2.csv")
#bord5
kenya %>%
group_by(bord5, death) %>%
count() %>%
group_by(bord5) %>%
mutate(total = sum(n),
prop = case_when(death == 1 ~ n/total))
#sex
kenya %>%
group_by(male, death) %>%
count()%>%
group_by(male) %>%
mutate(total = sum(n),
prop = case_when(death == 1 ~ n/total))
#education
kenya %>%
group_by(education, death) %>%
count() %>%
group_by(education) %>%
mutate(total = sum(n),
prop = case_when(death == 1 ~ n/total))
10+10+10
30*.25
14+7.5
magec_lr <- glm(death ~ as.factor(magec), family = binomial(link = "identity"), data = kenya)
summary(magec_lr)
#risk estimates for 16, 26, and 40
lincom(magec_lr, specification = c("(Intercept)",
"(Intercept) + as.factor(magec)1",
"(Intercept) + as.factor(magec)2"))
#risk differences
lincom(magec_lr, specification = c("-as.factor(magec)1",
"as.factor(magec)2 - as.factor(magec)1"))
predict.lm(magec_lr, interval = "confidence") %>%
data.frame() %>%
bind_cols(kenya %>% select(death, mage)) %>%
ggplot()+
geom_line(aes(x = mage, y = fit)) +
geom_ribbon(aes(x = mage, ymin = lwr, ymax = upr), alpha = 0.3) +
labs(y = "Risk of death", x = "Maternal age")
15+7.5
knitr::opts_chunk$set(echo = TRUE)
library(biostat3)
library(tidyverse)
library(broom)
kenya <- read_csv("../data/Kenya_lab2.csv")
full_i <- glm(death ~ bord5 + education_1 + education_2 + rural + mage + mage2, family = "binomial"(link = "log"), data = kenya)
full_i <- glm(death ~ bord5 + as.factor(education) + rural + as.factor(magec), family = "binomial"(link = "log"), data = kenya)
RR_full <- lincom(full_i, "bord5", level = 0.95, eform = TRUE)
View(RR_full)
summary(full_i)
add_column(RR_full, CLR = RR_full[,3] / RR_full[,2])
redux_ii <- glm(death ~ bord5 + education_1 + education_2 + rural, family = "binomial"(link = "log"), data = kenya)
redux_ii <- glm(death ~ bord5 + as.factor(education) + rural, family = "binomial"(link = "log"), data = kenya)
RR_remove_age <- lincom(redux_ii, "bord5", level = 0.95, eform = TRUE)
add_column(RR_remove_age, CLR = RR_remove_age[,3] / RR_remove_age[,2])
anova(redux_ii, full_i, test = "LRT")
library(lmtest)
lrtest(redux_ii, full_i)
full_i %>% augment(exponentiate = TRUE) %>% mean(.resid, na.rm = TRUE)
full_i %>% augment(exponentiate = TRUE)
temp <- full_i %>% augment(exponentiate = TRUE)
mean(temp$.resid^2)
mean(temp$.resid)^2
mean(temp$.resid)^2^22
mean(temp$.resid)^2^2
logLik(full_i)
`lab4_kenya[data]` <- readRDS("C:/Users/cf199/Box/lab_pack/707_lab/materials/707_lab4_2023_materials/lab4_kenya[data].rds")
View(`lab4_kenya[data]`)
View(`lab4_kenya[data]`)
knitr::opts_chunk$set(echo = TRUE)
library(biostat3)
library(tidyverse)
library(broom)
rm(`lab4_kenya[data]`)
kenya_closed <- read_csv("data/Kenya_closed.csv") %>%
mutate(education = factor(education),
mage_squared = mage ** 2)
View(kenya_closed)
sqrt(729)
full <- glm(death ~ bord5 + education + rural + mage + mage_squared, family = binomial(link = "log"), data = kenya_closed)
summary(full)
full %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
mutate(CLR = .upr/.lwr)
full %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE)
full <- glm(death ~ bord5 + education + rural + mage + mage_squared, family = binomial(link = "log"), data = kenya_closed)
full %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
mutate(CLR = conf.high/conf.low)
View(full)
full <- glm(death ~ bord5 + education + rural + mage + mage_squared, family = binomial(link = "log"), data = kenya_closed)
full %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
mutate(CLR = conf.high/conf.low)
logLik(full)
full$aic
full$coefficients[bord5]
full$coefficients$bord5
full$coefficients[bord5]
full$coefficients[[bord5]]
full$coefficients
str(full$coefficients)
full$coefficients["bord5"]
rm_age <- glm(death ~ bord5 + education + rural, family = binomial(link = "log"), data = kenya_closed)
rm_age %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
mutate(CLR = conf.high/conf.low,
bias = exp(full$coefficients["bord5"]) - estimate)
logLik(rm_age)
rm_age$aic
anova(full, rm_age, test = "LRT")
rm_age %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
mutate(CLR = conf.high/conf.low,
bias = full$coefficients["bord5"] - ln(estimate))
rm_age %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
mutate(CLR = conf.high/conf.low,
bias = full$coefficients["bord5"] - log(estimate))
logLik(rm_age)
rm_age$aic
anova(full, rm_age, test = "LRT")
logLik(rm_age)
rm_age$aic
anova(full, rm_age, test = "LRT")
library(lmtest)
lrtest(full, rm_age)
anova(full, rm_age, test = "LRT")
lrtest(full, rm_age)
rm_rural <- glm(death ~ bord5 + education + mage + mage_squared, family = binomial(link = "log"), data = kenya_closed)
rm_rural %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
mutate(CLR = conf.high/conf.low,
bias = full$coefficients["bord5"] - log(estimate))
logLik(rm_rural)
rm_rural$aic
anova(full, rm_rural, test = "LRT")
rm_ed <- glm(death ~ bord5 + rural + mage + mage_squared, family = binomial(link = "log"), data = kenya_closed)
rm_ed %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
mutate(CLR = conf.high/conf.low,
bias = full$coefficients["bord5"] - log(estimate))
logLik(rm_ed)
rm_ed$aic
anova(full, rm_ed, test = "LRT")
rm_age_rural <- glm(death ~ bord5 + education, family = binomial(link = "log"), data = kenya_closed)
rm_age_rural %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
mutate(CLR = conf.high/conf.low,
bias = full$coefficients["bord5"] - log(estimate))
logLik(rm_age_rural)
rm_age_rural$aic
anova(full, rm_age_rural, test = "LRT")
rm_ed_rural <- glm(death ~ bord5 + mage + mage_squared, family = binomial(link = "log"), data = kenya_closed)
rm_ed_rural %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
mutate(CLR = conf.high/conf.low,
bias = full$coefficients["bord5"] - log(estimate))
logLik(rm_ed_rural)
rm_ed_rural$aic
anova(full, rm_ed_rural, test = "LRT")
rm_ed_age <- glm(death ~ bord5 + rural, family = binomial(link = "log"), data = kenya_closed)
rm_ed_age %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
mutate(CLR = conf.high/conf.low,
bias = full$coefficients["bord5"] - log(estimate))
logLik(rm_ed_age)
rm_ed_age$aic
anova(full, rm_ed_age, test = "LRT")
rm_ed_age <- glm(death ~ bord5 + rural, family = binomial(link = "log"), data = kenya_closed)
rm_ed_age %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
mutate(CLR = conf.high/conf.low,
bias = full$coefficients["bord5"] - log(estimate))
logLik(rm_ed_age)
rm_ed_age$aic
anova(full, rm_ed_age, test = "LRT")
crude <- glm(death ~ bord5, family = binomial(link = "log"), data = kenya_closed)
crude %>%
tidy(conf.int = TRUE, conf.level = 0.95, exponentiate = TRUE) %>%
mutate(CLR = conf.high/conf.low,
bias = full$coefficients["bord5"] - log(estimate))
logLik(crude)
crude$aic
anova(full, crude, test = "LRT")
kenya_open <- read_rds("data/lab4_kenya[data].rds")
View(kenya_open)
table(kenya_open$death, kenya_open$`_d`)
table(kenya_open$death, kenya_open$`_d`, useNA = "ifany")
table(kenya_open$time, kenya_open$`_t`, useNA = "ifany")
table(kenya_open$time, kenya_open$`_t`, useNA = "ifany") %>% View())
table(kenya_open$time, kenya_open$`_t`, useNA = "ifany") %>% View()
table(kenya_open$time, kenya_open$`_t`, useNA = "ifany") %>% pivot_wider(names_from = Var2, values_from = Freq) %>% View()
table(kenya_open$time, kenya_open$`_t`, useNA = "ifany") %>% as.data.frame() %>% pivot_wider(names_from = Var2, values_from = Freq) %>% View()
kenya_rds <- read_rds("data/lab4_kenya[data].rds")
kenya_rds <- read_rds("data/lab4_kenya[data].rds") %>%
select(-magec_c1, -magec_c2, -magec_c3, -mage2, -education_c1, -education_c2, -education_c3,-`_d`, -`_t`, -`t0`, -sch1, -sca1, -lntime)
kenya_rds <- read_rds("data/lab4_kenya[data].rds")
new <- kenya_rds %>%
select(-magec_c1, -magec_c2, -magec_c3, -mage2, -education_c1, -education_c2, -education_c3,-`_d`, -`_t`, -`_t0`, -sch1, -sca1, -lntime)
View(new)
table(kenya_open$b7, kenya_open$time, useNA = "ifany") %>% as.data.frame() %>% pivot_wider(names_from = Var2, values_from = Freq) %>% View()
another_option <- read_rds("data/Fall_Lab_3_kenya[data].rds")
new <- kenya_rds %>%
select(-magec_c1, -magec_c2, -magec_c3, -mage2, -education_c1, -education_c2, -education_c3,-`_d`, -`_t`, -`_t0`, -sch1, -sca1, -lntime, -b6, -`_st`)
colnames(kenya_closed) == colnames(new)
View(new)
colnames(kenya_closed)
colnames(new)
new <- kenya_rds %>%
select(-magec_c1, -magec_c2, -magec_c3, -mage2, -education_c1, -education_c2, -education_c3,-`_d`, -`_t`, -`_t0`, -sch1, -sca1, -lntime, -b6, -`_st`, -b11, -b13)
write_csv(new, "data/kenya_open.csv")
kenya_open <- read_csv("data/kenya_open.csv")
kenya_closed <- read_csv("data/Kenya_closed.csv") %>%
mutate(education = factor(education))
kenya_open <- read_csv("data/kenya_open.csv") %>%
mutate(education = factor(education))
kenya_open %>%
group_by(bord5) %>%
summarise(n = n(),
person_time = sum(time))
kenya_open %>%
group_by(bord5) %>%
summarise(n_deaths = sum(death),
person_time = sum(time))
bord5 <- glm(death ~ bord5, family = poisson(link = "log"), data = kenya_open)
bord5 %>%
tidy(conf.int = TRUE, exponentiate = TRUE)
lincom(bord5, specification = "(Intercept) + bord5", level = 0.95, eform = TRUE)
bord5 <- glm(death ~ bord5 + offset(log(time)), family = poisson(link = "log"), data = kenya_open)
bord5 %>%
tidy(conf.int = TRUE, exponentiate = TRUE)
lincom(bord5, specification = "(Intercept) + bord5", level = 0.95, eform = TRUE)
bord5 <- glm(death ~ bord5 + offset(time), family = poisson(link = "log"), data = kenya_open)
bord5 <- glm(death ~ bord5 + offset(log(time)), family = poisson(link = "log"), data = kenya_open)
bord5 %>%
tidy(conf.int = TRUE, exponentiate = TRUE)
lincom(bord5, specification = "(Intercept) + bord5", level = 0.95, eform = TRUE)
library(euroformix)
getKit()
getKit() %>% dput()
dput(getKit())
# Load libraries
suppressPackageStartupMessages(library(tidyverse))
evidence <- read_delim("../example_data/from_euroformix/stain.txt")
setwd("C:/Users/cf199/Box/once_bitten/run_euroformix/scripts")
evidence <- read_delim("../example_data/from_euroformix/stain.txt")
View(evidence)
evidence <- read_delim("../example_data/from_euroformix/stain.txt") %>%
select(-ADO, -UD1, -`...17`)
evidence <- read_delim("../example_data/from_euroformix/stain.txt") %>%
select(-ADO, -UD1, -`...17`, -`Allele 6`, -`Height 6`)
new <- evidence %>%
select(`Sample Name`, Marker, starts_with("Allele"))
View(new)
evidence <- read_delim("../example_data/from_euroformix/stain.txt")
new <- evidence %>%
select(`Sample Name`, Marker, starts_with("Allele"))
new <- evidence %>%
select(`Sample Name`, Marker, starts_with("Allele")) %>%
pivot_longer(cols = starts_with("Allele"), names_to = "names", values_to = "Allele")
new <- evidence %>%
select(`Sample Name`, Marker, starts_with("Allele")) %>%
mutate_at(starts_with("Allele"), as.character)
new <- evidence %>%
select(`Sample Name`, Marker, starts_with("Allele")) %>%
mutate(across(starts_with("Allele"), as.character)) %>%
pivot_longer(cols = starts_with("Allele"), names_to = "names", values_to = "Allele")
new <- evidence %>%
select(`Sample Name`, Marker, starts_with("Allele")) %>%
mutate(across(starts_with("Allele"), as.character)) %>%
pivot_longer(cols = starts_with("Allele"), names_to = "names", values_to = "Allele") %>%
drop_na()
new <- evidence %>%
#select(`Sample Name`, Marker, starts_with("Allele")) %>%
mutate(across(starts_with("Allele"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = c("allele_names","height_names"), values_to = c("Allele", "Height")) %>%
drop_na()
new <- evidence %>%
#select(`Sample Name`, Marker, starts_with("Allele")) %>%
mutate(across(starts_with("Allele"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = c("names"), values_to = c("Allele", "Height")) %>%
drop_na()
new <- evidence %>%
#select(`Sample Name`, Marker, starts_with("Allele")) %>%
mutate(across(starts_with("Allele"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na()
new <- evidence %>%
#select(`Sample Name`, Marker, starts_with("Allele")) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na()
new <- evidence %>%
select(-AD0, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na()
new <- evidence %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na()
new <- evidence %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Allele")) %>%
select(-names) %>%
rename(Allele = value)
new <- evidence %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Allele")) %>%
mutate(index = substr(names, 8,8)) %>%
select(-names) %>%
rename(Allele = value)
new <- evidence %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Allele")) %>%
mutate(index = substr(names, 8,8)) %>%
select(-names) %>%
rename(Allele = value) %>%
left_join(evidence %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Height")) %>%
mutate(index = substr(names, 8,8)) %>%
select(-names) %>%
rename(Height = value))
new <- evidence %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Allele")) %>%
mutate(index = substr(names, 8,8)) %>%
select(-names) %>%
rename(Allele = value) %>%
left_join(evidence %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Height")) %>%
mutate(index = substr(names, 8,8)) %>%
select(-names) %>%
rename(Height = value)) %>%
select(-index)
new <- evidence %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Allele")) %>%
mutate(index = substr(names, 8,8)) %>%
select(-names) %>%
rename(Allele = value) %>%
left_join(evidence %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Height")) %>%
mutate(index = substr(names, 8,8)) %>%
select(-names) %>%
rename(Height = value)) %>%
select(-index) %>%
rename(SampleName = `Sample Name`)
evidence <- read_delim("../example_data/from_euroformix/stain.txt") %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Allele")) %>%
mutate(index = substr(names, 8,8)) %>%
select(-names) %>%
rename(Allele = value) %>%
left_join(evidence %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Height")) %>%
mutate(index = substr(names, 8,8)) %>%
select(-names) %>%
rename(Height = value)) %>%
select(-index) %>%
rename(SampleName = `Sample Name`)
View(evidence)
write_csv(evidence, file = "../example_data/bistro_input/evidence.csv")
reference <- read_delim("../example_data/from_euroformix/databaseESX17.txt")
View(reference)
evidence <- read_delim("../example_data/from_euroformix/stain.txt") %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Allele")) %>%
mutate(index = substr(names, 8,8)) %>%
select(-names) %>%
rename(Allele = value) %>%
left_join(evidence %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Height")) %>%
mutate(index = substr(names, 8,8)) %>%
select(-names) %>%
rename(Height = value)) %>%
select(-index) %>%
rename(SampleName = `Sample Name`) %>%
arrange(SampleName, Marker, Allele)
evidence <- read_delim("../example_data/from_euroformix/stain.txt")
View(evidence)
evidence <- read_delim("../example_data/from_euroformix/stain.txt") %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Allele")) %>%
mutate(index = substr(names, 8,8)) %>%
select(-names) %>%
rename(Allele = value) %>%
left_join(read_delim("../example_data/from_euroformix/stain.txt") %>%
select(-ADO, -UD1, -`...17`) %>%
mutate(across(starts_with("Allele"), as.character), across(starts_with("Height"), as.character)) %>%
pivot_longer(cols = c(starts_with("Allele"), starts_with("Height")), names_to = "names", values_to = "value") %>%
drop_na() %>%
filter(str_detect(names, "Height")) %>%
mutate(index = substr(names, 8,8)) %>%
select(-names) %>%
rename(Height = value)) %>%
select(-index) %>%
rename(SampleName = `Sample Name`) %>%
arrange(SampleName, Marker, Allele)
write_csv(evidence, file = "../example_data/bistro_input/evidence.csv")
new <- reference %>%
pivot_longer(cols = starts_with("Allele"), names_to = "name", values_to = "Allele")
new <- reference %>%
pivot_longer(cols = starts_with("Allele"), names_to = "name", values_to = "Allele") %>%
select(-name) %>%
rename(SampleName = `Sample Name`) %>%
arrange(SampleName, Marker, Allele)
new <- reference %>%
pivot_longer(cols = starts_with("Allele"), names_to = "name", values_to = "Allele") %>%
select(-name) %>%
rename(SampleName = `Sample Name`) %>%
arrange(SampleName, Marker, Allele) %>%
drop_na()
reference <- read_delim("../example_data/from_euroformix/databaseESX17.txt") %>%
pivot_longer(cols = starts_with("Allele"), names_to = "name", values_to = "Allele") %>%
select(-name) %>%
rename(SampleName = `Sample Name`) %>%
arrange(SampleName, Marker, Allele)
write_csv(reference, file = "../example_data/bistro_input/reference_database.csv")
freqs <- read_csv("../example_data/from_euroformix/ESX17_Norway.csv")
write_csv(freqs, file = "../example_data/bistro_input/allele_freqs.csv")
